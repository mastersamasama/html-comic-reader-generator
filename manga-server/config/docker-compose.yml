version: '3.8'

services:
  manga-server:
    build: 
      context: ..
      dockerfile: config/Dockerfile
    container_name: manga-server
    ports:
      - "${PORT:-80}:80"
    environment:
      - NODE_ENV=production
      - PORT=80
      - HOSTNAME=0.0.0.0
      - MANGA_ROOT=/manga
      - CACHE_SIZE_MB=512
      - MAX_CONNECTIONS=5000
      - CORS_ORIGIN=*
      - RATE_LIMIT_ENABLED=false
      - STREAMING_THRESHOLD=262144
      - COMPRESSION_THRESHOLD=1024
      - BACKGROUND_INDEXING=true
      - CONNECTION_POOL_SIZE=100
    volumes:
      - ../æœ¬:/manga:ro
      - manga-logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.manga.rule=Host(`manga.localhost`)"
      - "traefik.http.services.manga.loadbalancer.server.port=80"
      - "traefik.http.routers.manga.entrypoints=web"
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    user: "1000:1000"
    networks:
      - manga-network

  # Optional: Reverse proxy with automatic HTTPS
  traefik:
    image: traefik:v3.0
    container_name: manga-traefik
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik-data:/data
    command:
      - --api.dashboard=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.letsencrypt.acme.httpchallenge=true
      - --certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web
      - --certificatesresolvers.letsencrypt.acme.email=your-email@example.com
      - --certificatesresolvers.letsencrypt.acme.storage=/data/acme.json
    networks:
      - manga-network
    profiles:
      - proxy

  # Optional: Monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: manga-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    networks:
      - manga-network
    profiles:
      - monitoring

  # Optional: Grafana dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: manga-grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - manga-network
    profiles:
      - monitoring

volumes:
  manga-logs:
  traefik-data:
  prometheus-data:
  grafana-data:

networks:
  manga-network:
    driver: bridge